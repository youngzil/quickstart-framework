<?xml version="1.0" encoding="UTF-8"?>
<msgtestCfg xmlns="http://www.cmos.com/msgtest">
	<!--［1-＊］ 客户端所属中心，如果是服务端配置centerCfg节点可以有多个，如果是客户端配置centerCfg只有一个 -->
	<centerCfg>
		<!--［1-1］ 中心名称 -->
		<name>orderCenter</name>

		<!-- 全局配置 -->
		<globalCfg>
			<log4x>true</log4x>
		</globalCfg>

		<!-- 客户端发送消息配置 -->
<!-- 		<producerCfg> -->
			<!--重发次数 范围1-20-->
<!-- 			<resendTimes>2</resendTimes> -->
			<!--重发间隔时间 范围10-30000-->
<!-- 			<resenddelay>1000</resenddelay> -->
			<!-- 获取回执消息超时时间 -->
<!-- 			<replyTimeOut>1000</replyTimeOut> -->
<!-- 		</producerCfg> -->

		<consumeCfg>
			<!-- 消费者是推还是拉模式 pull push,一般都是用的推的模式,拉会自动用定时任务去拉，1000ms拉一次 -->
			<consumeType>push</consumeType>
			<!-- 只有consumeType配置为pull才有用 -->
			<pullCfg>
				<!-- 拉模式下间隔时间 -->
				<pullNextDelayTimeMillis>1</pullNextDelayTimeMillis>
				<!-- 批量拉的个数 -->
				<maxNums>30</maxNums>
			</pullCfg>
		</consumeCfg>

		<!--后面都是从控制台拉取得数据,需要发送的topic或者queue -->

		<destinations number="10">
			<!-- belong:可选,未配置就是自己的中心 -->
			<!-- name:必选,主题名称 -->
			<!-- order属性这个是此主题是否用于顺序消息，true或者false 不设置此属性时默认false -->
			<!-- ruleClass可选：默认是com.quickstart.msgtest.common.route.impl.DefaultDestinationRule，如果是默认，小队列的规则是name＋number -->
	 		<queue name="order"  ruleClass="com.cmos.msgtest.common.route.impl.TestDestinationRule"/>
			<queue name="PerfTest"  belong="orderCenter"/>
		</destinations>

		<subscribes>
			<!-- subDestination:必选，订阅的主题名称。必须要存在 -->
			<!-- tag:可选，默认是＊。配合destinations->ruleClass，如果有多个过滤条件，请按照a||b -->
			<!-- processThreadNums:可选，默认consumeCfg->processThreadNums.处理消息的线程 -->
			<subscribe subDestination="PerfTest" >
				<!-- 配置实现类，利用管道流的思想，按照配置顺序依次处理消息.只支持异步消息 -->
				<implclass>com.cmos.msgtest.SubscribeImpl1</implclass>
				<!--<implclass>com.quickstart.msgtest.SubscribeImpl2</implclass> -->
			</subscribe>

			<subscribe subDestination="order">
				<!-- 配置实现类，利用管道流的思想，按照配置顺序依次处理消息.只支持异步消息 -->
				<implclass>com.cmos.msgtest.SubscribeImpl1</implclass>
				<!--<implclass>com.quickstart.msgtest.SubscribeImpl2</implclass> -->
			</subscribe>
		</subscribes>

		<!-- containClusters: 定义了中心部署在哪些集群上 -->
		<centers>
			<center name="orderCenter" containClusters="cluster-1" />
		</centers>

		<clusters>
		<!--RocketMQ、Kafka、ActiveMQ  -->
			<cluster name="cluster-1" type="RocketMQ">
 				<url>192.168.100.145:9876;192.168.100.146:9876</url>
<!-- 				<url>failover:(tcp://192.168.100.146:61616)</url>   -->
<!-- 				<url>failover:(tcp://192.168.171.128:61617)</url> -->
			</cluster>
		</clusters>

		<persistence>
			<exceptionPersistence>
				<!-- 为异常处理分配的线程数 -->
				<processThreadNums>10</processThreadNums>
				<isExceptionPersitence>false</isExceptionPersitence>
				<!-- 持久化类型：db（数据库）,class(实现类) -->
				<exceptionType>class</exceptionType>
				<!-- 生产者异常处理,必须实现com.quickstart.msgtest.common.ex.exception.IExceptionPersitence接口 -->
				<producerExceptionClass>com.cmos.msgtest.producer.ex.ProducerExceptionHandle</producerExceptionClass>
				<!-- 消费者异常处理,必须实现com.quickstart.msgtest.common.ex.exception.IExceptionPersitence接口 -->
				<consumerExceptionClass>com.cmos.msgtest.consumer.ex.ConsumerExceptionHandle</consumerExceptionClass>
			</exceptionPersistence>

			<!-- logPersistence 消息是否进行客户端持久化-false、true -->
<!-- 			<logPersistence> -->
<!-- 				<isLogPersistence>false</isLogPersistence> -->
				<!--logType 消息客户端持久化方式 -file、db -->
<!-- 				<logType>file</logType> -->
<!-- 			</logPersistence> -->

		</persistence>
	</centerCfg>
</msgtestCfg>